<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="WebServiceTrainingProject" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" id="f128e951-6522-4df0-b64b-400caaa60034" xmlns:con="http://eviware.com/soapui/config"><con:description>Google Book API URLs:

Volumes URL
/books/v1/volumes</con:description><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://www.googleapis.com" type="rest" id="11227853-8eda-4e67-bab2-3d91e6d2b786" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://www.googleapis.com</con:endpoint></con:endpoints><con:resource name="Volumes" path="/books/v1/volumes" id="d7a90997-a12d-458b-8c14-c3c56fa9b733"><con:settings/><con:parameters/><con:resource name="{id}" path="/{id}" id="ead53ff2-d435-4f87-9f9e-f147d2e78c37"><con:settings/><con:parameters><con:parameter disableUrlEncoding="false"><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="GetIdDetail" method="GET" id="11cab85d-c99e-4f42-b867-946a8476e483"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:o42="https://www.googleapis.com/books/v1/volumes/O42iNERgx7oC">o42:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:id="https://www.googleapis.com/books/v1/volumes/id">id:Fault</con:element></con:representation><con:request name="GetBookIDDetailRequest" mediaType="application/json" id="03601b6f-0f47-4729-ba33-5d8dd4bb02e7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.googleapis.com</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:method name="GetVolumes" method="GET" id="254d1139-bfe8-43e4-adfc-865ae1967735"><con:settings/><con:parameters><con:parameter><con:name>q</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:vol="https://www.googleapis.com/books/v1/volumes">vol:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:vol="https://www.googleapis.com/books/v1/volumes">vol:Fault</con:element></con:representation><con:request name="GetVolumesRequest" mediaType="application/json" id="26ebb331-8088-4011-a0f3-48d86d6d7138"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.googleapis.com</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="q" value="${#Project#VolumeSearchValue}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>q</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite name="GoogleBookAPI" id="67ae4133-2a4f-4068-9d53-5a3abb3dae7a"><con:description>This Test Suite performs </con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SearchSanity" searchProperties="true" id="f80de148-cdf1-4716-98af-162a09a3248a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test case is based on Test Request: GetVolumesRequest
This test case as a part of Sanity test performs following:
-Checks Http error status
-Checks the Node values exits and are not Null.
-Captures first 5 Ids
</con:description><con:settings/><con:testStep type="restrequest" name="GetVolumeDetail" id="3e08c14e-f791-478c-9fdc-ddb665738e77"><con:settings/><con:config service="https://www.googleapis.com" resourcePath="/books/v1/volumes" methodName="GetVolumes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetVolumeDetail" mediaType="application/json" id="9a2a308f-d327-4bc7-9558-3972bdb0aaf8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.googleapis.com</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="HTTPStatusCodeAssertion" id="87362a4b-d6c4-45b3-b241-ac2dbf1f4e4d"><con:configuration><codes>${#Project#ValidHttpValue}</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="TotalItemsExistsNotNull" id="58dd1015-70be-44e6-9d0e-f2f8d491c70d"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)

String xPath = "//*:totalItems"

boolean elementNotNull = (holder.getDomNode(xPath) != null) &amp;&amp; (holder.getNodeValue(xPath) != null)
log.info xPath + " dom node value: " + holder.getDomNode(xPath)
log.info xPath + " node value: " + holder.getNodeValue(xPath)

assert elementNotNull


</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="KindExistsNotNull" id="881c01aa-7585-4e14-9778-1a3e668083f3"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder(messageExchange.responseContentAsXml)

String xPath = "//*:items/*:e/*:kind"

boolean elementNotNull = (holder.getDomNode(xPath) != null) &amp;&amp; (holder.getNodeValue(xPath) != null)
log.info xPath + " dom node value: " + holder.getDomNode(xPath)
log.info xPath + " node value: " + holder.getNodeValue(xPath)

assert elementNotNull</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="q" value="${#Project#VolumeSearchValue}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>q</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GetBookNodeDetails" id="6ff3e2ba-ea0a-4024-b74c-e7b312e2e8a5"><con:settings/><con:config service="https://www.googleapis.com" methodName="GetVolumes" resourcePath="/books/v1/volumes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetBookNodeDetails" mediaType="application/json" id="97659b19-daf3-4723-bded-a60e8d160960"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://www.googleapis.com</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="FirstFiveIdExistsAndNotNull" id="92c0c4b1-c0f4-4b34-8950-c4c0d177fa4d"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils
import org.junit.Assert

def holder = new XmlHolder(messageExchange.responseContentAsXml)
String authenticationToken =  messageExchange.responseHeaders["#status#"] 
log.info authenticationToken
for( int item=1;item&lt;6;item++) { 
	String id="//*:items/*:e["+item+"]/*:id"
	
	log.info "******* Item "+item+" ID  ****** " 
	boolean idNotNull = (holder.getDomNode(id) != null) &amp;&amp; (holder.getNodeValue(id) != null)
	log.info  " ID dom node value: " + holder.getDomNode(id)
	log.info  " ID node value: " + holder.getNodeValue(id)

	Assert.assertTrue("Id value is null",idNotNull)
	assert idNotNull
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="FirstFiveTitleExistsAndNotNull" id="ddde10d2-3b9f-486b-9258-7bc6f3d4f536"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils 
import org.junit.Assert

def holder = new XmlHolder(messageExchange.responseContentAsXml)

for( int item=1;item&lt;6;item++) { 
	String title= "//*:items/*:e["+item+"]/*:volumeInfo/*:title"
	log.info "******* Item "+item+" Title ****** " 
	boolean titleNotNull = (holder.getDomNode(title) != null) &amp;&amp; (holder.getNodeValue(title) != null)
	log.info  " Title dom node value: " + holder.getDomNode(title)
	log.info  " Title node value: " + holder.getNodeValue(title)
	
	
	Assert.assertTrue("Title value is null",titleNotNull)
	assert titleNotNull
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="FirstFiveSelfLinkExistsAndNotNull" id="5b3449f1-46b4-4233-a3c2-3d8f612d43b9"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils 
import org.junit.Assert
def holder = new XmlHolder(messageExchange.responseContentAsXml)

for( int item=1;item&lt;6;item++) { 
	String selflink="//*:items/*:e["+item+"]/*:selfLink"
	log.info "******* Item "+item+" Self Link ****** " 
	boolean selfLinkNotNull = (holder.getDomNode(selflink) != null) &amp;&amp; (holder.getNodeValue(selflink) != null)
	log.info  " Self Link dom node value: " + holder.getDomNode(selflink)
	log.info  " Self Link node value: " + holder.getNodeValue(selflink)

	Assert.assertTrue("Selflink value is null",selfLinkNotNull)
	assert selfLinkNotNull
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="FirstFivePublisherExistsAndNotNull" id="aec10ee0-e788-4a17-a7e7-87309fbd15e7"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils 
import org.junit.Assert
def holder = new XmlHolder(messageExchange.responseContentAsXml)

for( int item=1;item&lt;6;item++) { 
	String publisher="//*:items/*:e["+item+"]/*:volumeInfo/*:publisher"
	log.info "******* Item "+item+" Publisher Details ****** " 
	boolean publisherNotNull = (holder.getDomNode(publisher) != null) &amp;&amp; (holder.getNodeValue(publisher) != null)
	log.info  " Publisher dom node value: " + holder.getDomNode(publisher)
	log.info  " Publisher  value: " + holder.getNodeValue(publisher)

	Assert.assertTrue("Publisher value is null",publisherNotNull)
	assert publisherNotNull
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="FirstFivePublishedDateExistsAndNotNull" id="15e8e82e-b318-4f0c-b5e7-9c9f0319e91f"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils 
import org.junit.Assert

def holder = new XmlHolder(messageExchange.responseContentAsXml)

for( int item=1;item&lt;6;item++) { 
	String publishedDate="//*:items/*:e["+item+"]/*:volumeInfo/*:publishedDate"
	log.info "******* Item "+item+" Published Date ****** " 
	boolean publishedDateNotNull = (holder.getDomNode(publishedDate) != null) &amp;&amp; (holder.getNodeValue(publishedDate) != null)
	log.info  " Published Date dom node value: " + holder.getDomNode(publishedDate)
	log.info  " Published Date node value: " + holder.getNodeValue(publishedDate)

	Assert.assertTrue("Published Date value is null",publishedDateNotNull)
	assert publishedDateNotNull
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="CheckSearchTextInResponse" id="e3b92448-dde1-4ac1-b68f-7a899036fa6e"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils 
import org.junit.Assert
def holder = new XmlHolder(messageExchange.responseContentAsXml)

for( int item=1;item&lt;6;item++) { 
	String title= "//*:items/*:e["+item+"]/*:volumeInfo/*:title"
	String search= context.expand('${#q}')
	log.info search
	String titleValue=holder.getNodeValue(title)
	titleValue=titleValue.toLowerCase()
	log.info titleValue
	def titleContainsSearchQuerry=titleValue.contains(search)

	Assert.assertTrue("Title does not contain the searched value",titleContainsSearchQuerry)
	assert titleContainsSearchQuerry
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="CheckDatePattern" id="7be84191-f6de-42f3-b109-a4928457eeb6"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils
import org.junit.Assert
import java.text.ParseException
 
def holder = new XmlHolder(messageExchange.responseContentAsXml)
try{
	for( int item=1;item&lt;6;item++) { 
		String publishedDate="//*:items/*:e["+item+"]/*:volumeInfo/*:publishedDate"
		log.info "Checking date pattern for item : "+item
		def d1=holder.getNodeValue(publishedDate)
		log.info "Published Date: "+d1
		def date= new Date().parse('yyyy-MM-dd', d1) 
		boolean dateComaprison= (d1 == date.format("yyyy-MM-dd"))
		
		assert dateComaprison
		Assert.assertTrue("Published Date not in the desired format",dateComaprison)
	}
}
catch (e)
{
	assert e in ParseException
	log.info "Script failed due to ParseException"
	assert false
}</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="q" value="${#Project#VolumeSearchValue}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>q</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Capture5Id" id="7e709094-25a8-431f-af4b-df1e81f0a3bc"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder 
import org.apache.commons.lang.StringUtils
import static java.util.Calendar.*
import org.jsoup.Jsoup; 
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements; 

def responseAsXml = testRunner.testCase.testSteps["GetVolumeDetail"].testRequest.getResponseContentAsXml() 
def responseAsXm1l = context.expand( '${GetVolumeDetail#ResponseAsXml}' )

def rawRequest = context.expand( '${GetVolumeDetail#RawRequest}' )
def request = context.expand( '${GetVolumeDetail#Request}' )
def response = context.expand( '${GetVolumeDetail#Response}' )
def endpoint = context.expand( '${GetVolumeDetail#Endpoint}' )

def q = context.expand( '${GetVolumeDetail#q}' )
def inputValueSeparator = context.expand( '${#Project#inputValueSeparator}' )


log.info request
log.info response
log.info endpoint


Document doc = Jsoup.parse(response)
//String title = doc.title();

log.info doc
//log.info title
*/
def holder = new XmlHolder(responseAsXml)


String idVal=""
for( int item=1;item&lt;6;item++) { 
	String id="//*:items/*:e["+item+"]/*:id"
	if(item&lt;5)
	idVal = idVal+holder.getNodeValue(id)+","
	else
	idVal=idVal+holder.getNodeValue(id)
	log.info idVal
} 
 
testRunner.testCase.testSuite.setPropertyValue("FirstFiveIdValue", idVal)

def author = context.expand( '${GetVolumeDetail#ResponseAsXml#declare namespace ns1=\'https://www.googleapis.com/books/v1/volumes\'; //ns1:Response[1]/ns1:items[1]/ns1:e[1]/ns1:volumeInfo[1]/ns1:authors[1]/ns1:e[1]}' )

log.info author
</script></con:config></con:testStep><con:setupScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>7e709094-25a8-431f-af4b-df1e81f0a3bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="BookIDSanity" searchProperties="true" id="f65ab399-02e9-4578-a3ec-4973c358dfad"><con:description>Test case is based on Test Request: GetBookIDDetailRequest
This test case as a part of Sanity test Test performs following:
-Checks that RequestId and ResponseId are equal</con:description><con:settings/><con:testStep type="groovy" name="CheckIdResponse" id="7254517b-2afc-493d-ae57-cddae66a6303"><con:settings/><con:config><script>def currentId = context.expand( '${Properties#CurrentId}' )
import org.apache.commons.lang.StringUtils



def inputValues = context.expand('${#TestSuite#FirstFiveIdValue}')
log.info inputValues

if(StringUtils.isNotBlank(inputValues)) {
	inputValues = inputValues.split(context.expand('${#Project#inputValueSeparator}'))

	for(int i = 0; i &lt; inputValues.size(); i++) {
		log.info "Security Id value: " + inputValues[i]
		String inputValue = inputValues[i].trim()
		//Set id parameter
		testRunner.testCase.getTestStepByName("GetDetailsForId").setPropertyValue("id",inputValue)
	
		//Run test step
		testRunner.runTestStepByName("Property Transfer")
		testRunner.runTestStepByName("GetDetailsForId")		
	}	
} else {
	log.info "Empty ID input value"
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GetDetailsForId" id="9fbbaf15-6bd9-4bab-9f35-dae224201452"><con:settings/><con:config service="https://www.googleapis.com" resourcePath="/books/v1/volumes/{id}" methodName="GetIdDetail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetDetailsForId" mediaType="application/json" id="f256850b-b61f-4861-9d7d-30c34c0ba47c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.googleapis.com</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="CheckRequestIdEqualsResponseId" id="e1417548-11b7-4b22-9601-2933772fc982"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import org.junit.Assert

def holder = new XmlHolder(messageExchange.responseContentAsXml)

String idval="//*:id"
def ResponseId=holder.getNodeValue(idval)
log.info"ResponseId: "+ResponseId

def RequestId= context.expand( '${Properties#currentId}' )
log.info "RequestId: "+RequestId

boolean responseIdRequestIdIsEqual = (RequestId == ResponseId)

Assert.assertTrue("Request Id and REsponse Id do not match",responseIdRequestIdIsEqual)
assert responseIdRequestIdIsEqual</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="BG08Zylo_7gC" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a45eb700-0da1-4538-b8a8-8ec97550de58"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>IdTransfer</con:name><con:sourceType>id</con:sourceType><con:sourceStep>GetDetailsForId</con:sourceStep><con:targetType>CurrentId</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties" id="0e3bcf30-0a14-4ada-bc16-ae7acbde8e94"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>CurrentId</con:name><con:value>BG08Zylo_7gC</con:value></con:property></con:properties></con:config></con:testStep><con:setupScript/><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cdee49da-640c-4f7d-946a-09bce2f9abae" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestGit" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:properties><con:property><con:name>FirstFiveIdValue</con:name><con:value>N1jiL8V3ISwC,O42iNERgx7oC,fk7u8awR0hIC,rKr9B3vn3a4C,BG08Zylo_7gC</con:value></con:property></con:properties><con:setupScript/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>inputValueSeparator</con:name><con:value>,</con:value></con:property><con:property><con:name>ValidHttpValue</con:name><con:value>200</con:value></con:property><con:property><con:name>VolumeSearchValue</con:name><con:value>coding</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>